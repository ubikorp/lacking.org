---
import type { Post } from "~/types";

import { fetchPosts, getRelatedPosts } from "~/utils/blog";
import { getBlogPermalink } from "~/utils/permalinks";

import Wrapper from "~/components/tlo/widgets/Wrapper.astro";
import Item from '~/components/tlo/archive/RelatedPost.astro';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const fetchedPosts = await fetchPosts();
const relatedPosts = post.tags ? getRelatedPosts(fetchedPosts, post.slug, post.tags) : [];

const isDark = false
const classes = { container: "pt-0 lg:pt-0 md:pt-0" }
---

<Wrapper isDark={isDark} containerClass={classes?.container as string}>
  <div class="flex flex-col lg:justify-between lg:flex-row mb-8">
    <div class="md:max-w-sm">
      <h2 class="text-3xl font-bold tracking-tight sm:text-4xl sm:leading-none group font-heading mb-2">
        Approximately Relevant
      </h2>
      <a
        class="text-muted dark:text-slate-400 hover:text-primary transition ease-in duration-200 block mb-6 lg:mb-0"
        href={getBlogPermalink()}
      >
        More is available Â»
      </a>
    </div>
  </div>

  <div class="grid gap-6 row-gap-5 md:grid-cols-2 lg:grid-cols-4 -mb-6">
    {relatedPosts.map((post) => (
      <Item post={post} />
    ))}
  </div>
</Wrapper>
